<!DOCTYPE html>

<head>
    <title>Lines</title>
    <script src="http://d3js.org/d3.v6.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>

        $(function () {
            $("#countriesDropdown").load("countriesDropdown.htm");
        });

        $(function () {
            $("#continentsDropdown").load("continentsDropdown.htm");
        });

        // VISUALIZATION LINE PLOT

        let width = 500;
        let height = 300;
        let margin = 30;

        function draw(data) {

            let svg = d3.select('body').append('svg')
                .attr('width', width)
                .attr('height', height);

            // The scale does not have extent, as it need all the values
            let x_extent = data.map(d => d.country);
            let x_scale = d3.scalePoint()
                .range([margin, width - margin])
                .domain(x_extent);

            // returns a two-size array with min and max values of y from data
            let y_extent = d3.extent(data, d => d.population);
            let y_scale = d3.scaleLinear()
                .range([height - margin, margin])
                .domain([0, y_extent[1]]); // adding 0 to let all points have the same base

            let circles = svg.selectAll("circle")
                .data(data)
                .join("circle")
                .attr("cx", (d, i) => x_scale(d.country))
                .attr("cy", d => y_scale(d.population))
                .attr("r", 1);

            let x_axis = d3.axisBottom(x_scale);
            d3.select("svg")
                .append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + (height - margin) + ")")
                .call(x_axis);

            let y_axis = d3.axisLeft(y_scale);
            d3.select("svg")
                .append("g")
                .attr("class", "y axis")
                .attr("transform", "translate(" + (margin) + ", 0" + ")")
                .call(y_axis);


            let line = d3.line()
                .x((d, i) => x_scale(d.country))
                .y(d => y_scale(d.population));

            d3.select("svg")
                .append("path")
                .attr("d", line(data))
                .attr("class", "linha");
        }
    </script>

    <style>
        .axis path {
            fill: none;
            stroke: black;
        }

        .axis {
            font-size: 8pt;
            font-family: sans-serif;
        }

        .tick {
            fill: none;
            stroke: black;
        }

        circle {
            stroke: black;
            stroke-width: 0.5px;
            fill: RoyalBlue;
            opacity: 0.6;
        }

        path {
            fill: none;
            stroke: black;
            stroke-width: 2px;
        }

        path.linha {
            stroke: DeepPink;
        }
    </style>
</head>

<body>
    <h3>Note: Run this with a server</h3>
    <div id="countriesDropdown"></div>
    <div id="continentsDropdown"></div>
    <script>
        d3.json("../datasets/cases_deaths/cases_deaths.json")
            .then(draw)
            .catch(function (err) { console.log(err) });
    </script>
</body>

</html>